@page "/ohdatranfertrns"
@inject IDbContextFactory<nrcwebContext> dbf;
@inject DialogService ds
@inject Gtools gtool
@inject NavigationManager NavigationManager
<style>
    /* This CSS ensures the table header stays on top */
    .tableFixHead {
        height: 250px;
        overflow-y: auto;
    }

        .tableFixHead thead th {
            position: sticky;
            top: 0;
            z-index: 1000; /* Ensures the header stays above table rows */
            background-color: #007bff; /* Adjust this color to match your header's */
            color: white;
        }
</style>

<div class="card p-0 " style="padding: 0px;">
    <div class="card-header alert alert-primary h3 text-center ">
        @PageTitle
    </div>

    <div class="card-body p-0" style="padding: 0px;">
        <div class="container ">

            <div class="row p-1">
                <label class="col-2 font-weight-bold ">رقم المستند</label>
                <RadzenTextBox class="col-4" @bind-Value="@CurrentTrnsNo" Change=@(args => f_onMainChange("currenttrnsno", args) ) />
            </div>
            <div class="row  p-1">
                <label class=" col-2 font-weight-bold">تاريخ المستند</label>

                <RadzenDatePicker style="padding:0;margin:0 ; " Name="CurrentTrnsDate" TValue=DateTime ShowTime="false" @bind-Value=CurrentTrnsDate
                                  DateFormat="dd/MM/yyyy" Change=@(args => f_onMainChange("trn_date", args)) />
                <RadzenRegexValidator Component="CurrentTrnsDate" Text="يجب إدخال التاريخ بشكل سليم" Pattern="dd/MM/yyyy" />
            </div>

            <div class="row  p-1">
                <button type="button" class="btn btn-primary h-100 col-2 font-weight-bold  m-1" @onclick="@(async ()=>await f_ondblclick("currentarcode"))">صاحب العهدة ...</button>
                <RadzenTextBox style="background-color:lemonchiffon; height:38px;margin:2px;" @bind-Value=@CurrentArCode Change=@(args => f_onMainChange("currentarcode", args) ) @ondblclick=@(async ()=> await f_ondblclick("currentarcode")) />
                <button class="btn  btn-info h-100  col-3 font-weight-bolder m-1" @onclick="on_GetOhdaClicked">إجمالى عهدة شخص</button>
            </div>
            <div class="row  p-1">
                <label class="col-4"> @(_Arnamelist.Where(a => a.ArCode== CurrentArCode).FirstOrDefault()?.ArName1??"")</label>
            </div>

            <div class="row  p-1 ">
                <label class="col-2 font-weight-bold">رقم البطاقة</label>
                @(_Arnamelist.Where(a => a.ArCode== CurrentArCode).FirstOrDefault()?.Nid??"")

                <label class="col-2 font-weight-bold">مكان العمل</label>
                @(_Arnamelist.Where(a => a.ArCode== CurrentArCode).FirstOrDefault()?.Work??"")
            </div>
            <div class="row  p-1">
                @*<button class="btn  btn-info h-100  col-3 font-weight-bolder m-1" @onclick="onDefineMan">تعريف الأفراد</button>*@
            </div>

            <div class="  row  ">
                <div class="col-lg mt-3 p-0 border border-primary">
                    <div class="card ">
                        <div class="card-body" style="padding: 0px;">
                            <div class="tableFixHead table-responsive" style=" height: 250px; font-size: small; overflow: auto; ">
                                <table class="table  table-hover table-sm  table-striped table-bordered table-hover">
                                    <thead style="position: sticky ; z-index:5;" class="font-weight-bold text-center alert-primary">
                                        <tr style="padding:0;margin:0;max-height:fit-content;">
                                            <th class="col-1" style="padding:0;margin:0;width:2%;">م</th>
                                            <th class="col-1" style="padding:0;margin:0">كود الصنف</th>
                                            <th class="col-2" style="padding:0;margin:0">اسم الصنف</th>
                                            <th class="col-1" style="padding: 0; margin: 0;width:20%;">تاريخ العهدة</th>
                                            <th class="col-1" style="padding: 0; margin: 0;width:20%;">الوحدة</th>
                                            <th class="col-1" style="padding:0;margin:0">الكمية الأصلية</th>
                                            <th class="col-2" style="padding:0;margin:0">الكمية المحولة</th>
                                            <th class="col-1" style="padding:0;margin:0">السعر </th>
                                            <th class="col-2" style="padding:0;margin:0">اسم المحول إليه</th>
                                            <th class="col-1" style="padding:0;margin:0">ملاحظات</th>
                                            <th style="padding:0;margin:0;width:2%;"> </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{int r = 0;}

                                        @foreach (var item in _ArquantExtendList)
                                        {
                                        <tr style="padding: 0; margin: 0; max-height: fit-content; background-color: lightsteelblue">
                                            <td class="col-1 " style="padding: 0; margin: 0; width:2%;text-align: center ">@(r + 1) </td>
                                            <td class="col-1" style="padding: 0; margin: 0"> <RadzenTextBox Style=" background-color: lightgray; padding: 0; margin: 0;" class="col-12" Name=itemcode @bind-Value="@item.ItemCode" readonly /></td>
                                            <td class="col-2" style="padding:0;margin:0 ; "><RadzenTextBox style="padding: 0; margin: 0; background-color: lightgray;" class="col-12" @bind-Value="@item.EngName" readonly /></td>
                                            <td class="col-2" style="padding:0;margin:0 ; "><RadzenDatePicker style="padding:0;margin:0 ; " Name="trn_date" TValue=DateTime ShowTime="true" Value=item.olddate HourFormat="12" DateFormat="dd/MM/yyyy" displayonly /></td>
                                            <td class="col-1" style="padding: 0; margin: 0; width: 20%;"><strong>@item.UnitName</strong></td>
                                            <td class="col-1" style="padding:0;margin:0">@String.Format("{0:0.000}", item.olditemqty)</td>
                                            <td class="col-1" style="padding:0;margin:0"> <RadzenNumeric TValue="double?" ShowUpDown="false" form="itemquant" style="padding:0;margin:0;" class="col-12" @bind-Value="@item.ItemQuant" /></td>
                                            <td class="col-1" style="padding:0;margin:0"> <RadzenNumeric TValue="double?" ShowUpDown="false" style="padding:0;margin:0;" class="col-12" @bind-Value="@item.ItemPrice"  /></td>
                                            <td class="col-2" style="padding:0;margin:0 ; "><RadzenTextBox style="padding:0;margin:0;" class="col-12" @bind-Value="@item.Notes" /></td>
                                            <td style="padding: 0; margin: 0; text-align: center; width: 2%; "> <button tabindex=-1 style="width: inherit;" class="btn btn-primary btn-sm" @onclick="() => { _ArquantExtendList.Remove(item); } ">&times;</button></td>

                                        </tr>
                                            r++;
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        @*<div class="card-footer p-2">
                            <div class="row text-center">
                                <div class="col">
                                    <RadzenButton Text="جديد" Click="OnNewMain"></RadzenButton>
                                </div>

                                <div class="col">
                                    <RadzenButton Text="تسجيل" Click="onSave"></RadzenButton>
                                </div>

                                <div class="col">
                                    <RadzenButton Text="إضافة سطر" Click="() => AddNewLine()" />
                                </div>
                            </div>
                        </div>*@

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

        @code {
            public string PageTitle { get; set; } = "مستند تحويل او تكهين عهدة";
            public string CurrentTrnsNo { get; set; } = "";
            public DateTime CurrentTrnsDate { get; set; } = DateTime.Today;
            string str_date { get; set; } = DateTime.Today.ToString();
            public String CurrentArCode { get; set; } ="" ;
            public List<ArquantExtend> _ArquantExtendList= new() ;
            public List<Arname> _Arnamelist { get; set; } = new();

            protected override async Task OnParametersSetAsync()
            {
                using (var db = dbf.CreateDbContext())
                {
                    _Arnamelist = await db.Arnames.AsNoTracking().ToListAsync();
                }
                await base.OnParametersSetAsync();

            }

            public async Task f_onMainChange(string name, dynamic arg)
            {
                string _value = "";
                switch (name.ToLower())
                {
                    case "currenttrnsno":
                        await Task.Delay(1); //Magic!
                        StateHasChanged();
                        _value = arg;

                        // _value = _value.PadLeft(10, '0');
                        CurrentTrnsNo = _value;
                        break;
                    case "currentarcode":
                        await Task.Delay(1); //Magic!
                        StateHasChanged();
                        _value = arg;
                        _value = _value.PadLeft(5, '0');
                        CurrentArCode = _value;
                        this._ArquantExtendList.Clear();


                        break;
                    default: break;
                }
            }

            //public async Task f_onchangedetail(string name, dynamic arg, int row)
            //{
            //    string _value = "";
            //    switch (name.ToLower())
            //    {
            //        case "itemcode":
            //            _ArquantList.ElementAt(row).ItemCode = "";
            //            await Task.Delay(1); //Magic!
            //            StateHasChanged();
            //            _value = arg;
            //            _value = _value.Substring(0, Math.Min(5, _value.Length));
            //            _value = _value.PadLeft(5, '0');
            //            Item item;
            //            using (var db = dbf.CreateDbContext()) item = db.Items.FirstOrDefault<Item>(a => a.ItemCode == _value && a.StockCode == _StockCode);
            //            if (item == null)
            //            {
            //                _ArquantList.ElementAt(row).ItemCode = "";
            //                gtool.Mynotify("خطأ", "الصنف غير معرف");
            //                return;
            //            }

            //            _ArquantList.ElementAt(row).ItemCode = item.ItemCode;
            //            _ArquantList.ElementAt(row).EngName = item.EngName;
            //            _ArquantList.ToList().ElementAt(row).UnitName = item.UnitName;
            //            _ArquantList.ToList().ElementAt(row).ExpDate = item.ExpDate;
            //            _ArquantList.ToList().ElementAt(row).ItemPrice = (double?)item.Value;
            //            _ArquantList.ToList().ElementAt(row).ItemDtype = (byte?)item.ItemDtype;
            //            _ArquantList.ToList().ElementAt(row).ItemDesc = (byte?)item.ItemDesc;
            //            _ArquantList.ToList().ElementAt(row).Transfer = false;

            //            StateHasChanged();
            //            break;
            //        default: break;
            //    }
            //}

            private async Task f_ondblclick(string arg)
            {
                Dictionary<string, object> ret;
                switch (arg.ToLower())
                {
                    case "currentarcode":
                        ret = await ds.OpenAsync<GModalList<Arname>>("",
                     new Dictionary<string, object>() { { "title", "قائمة الأفراد" }, { "scollist", "arcode,arname1,nid,work" }, { "colheads", "الكود,الإسم,الرقم القومى,العمل" } },
                     new DialogOptions() { ShowTitle = false, Width = "950px", Height = "400px", Resizable = true, Draggable = true });
                        if (ret != null)
                        {
                            if (!((bool)ret["status"])) return;
                            List<Arname> val = ret["result"] as List<Arname>;
                            CurrentArCode = val[0].ArCode;
                            await this.f_onMainChange("currentarcode", val[0].ArCode);
                        }
                        break;

                    default: break;
                }
            }

            async Task on_GetOhdaClicked()
            {
                if (!String.IsNullOrWhiteSpace(CurrentArCode))
                {
                    var ret = await ds.OpenAsync<ModalManOhda>("",
                    new Dictionary<string, object>() { { "arg_arcode", CurrentArCode } },
                    new DialogOptions() { ShowTitle = false, Width = "900px", Height = "400px", Resizable = true, Draggable = true });
                    if (ret != null)
                    {
                        if (!((bool)ret["status"])) return;
                        List<Arquant> val = ret["result"] as List<Arquant>;
                        foreach (var item in val)
                        {
                            if (!_ArquantExtendList.Any(e => e.oldid == item.Id)) { //this is a new line
                                ArquantExtend x = new();
                                x.oldid = item.Id;
                                x.ArNameto = CurrentArCode;
                                x.ArName = "";
                                x.EngName = item.EngName;
                                x.ExpDate = item.ExpDate;
                                x.GhaCode = item.GhaCode;
                                x.GhaMain = item.GhaMain;
                                x.GhaNum = item.GhaNum;
                                x.IncDec = item.IncDec;
                                x.ItemCode = item.ItemCode;
                                x.ItemDesc = item.ItemDesc;
                                x.ItemDtype = item.ItemDtype;
                                x.ItemPrice = item.ItemPrice;
                                x.olditemqty = item.ItemQuant;
                                x.ItemQuant = item.ItemQuant;
                                x.Kind = 2;
                                x.oldkind = item.Kind;
                                x.oldline = item.LineNo;
                                x.Notes = item.Notes;
                                x.olddate = item.TrnDate;
                                x.oldstockcode = item.StockCode;
                                x.Tdate = item.Tdate;
                                x.TempPrice = item.TempPrice;
                                x.Transfer = true;
                                x.TransferQuant = 0;
                                x.TrnDate = CurrentTrnsDate;
                                x.TrnNo = CurrentTrnsNo;
                                x.TrnYear = DateTime.Today.Year.ToString();
                                x.oldtrnsno = item.TrnNo;
                                x.UnitName = item.UnitName;
                                x.oldyear = item.TrnYear;
                                _ArquantExtendList.Add(x);
                            }

                        }
                    }
                }
            }


            public class ArquantExtend : Arquant
            {
                public string oldyear { get; set; }
                public string oldtrnsno { get; set; }
                public string oldstockcode { get; set; }
                public int oldkind { get; set; }
                public int? oldline { get; set; }
                public int oldid { get; set; }
                public DateTime? olddate { get; set; }
                public double? olditemqty { get; set; }
            }
        }
