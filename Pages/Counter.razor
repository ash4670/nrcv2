@page "/counter"
@inject IDbContextFactory<nrcdbContext> dbf;
    <form>
        <h1>Counter</h1>
        <div class="form-group">
            <label for="stock" class="control-label"></label>
            <select @bind="@selectedcode" class="form-control">
                @foreach (var item in _storlist)
                {
                    <option value="@item.StockCode">@item.StockName</option>
                }
            </select>
        </div>
        <p>Current count: @currentCount</p>
        <p>Current stock: @selectedcode</p>


        <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
        <table>
            @foreach (var item in _storlist)
            {

                <tr>
                    <td><input form="StockCode" class="form-control" @bind="@item.StockCode" />   </td>
                    <td><input form="StockName" class="form-control" @bind="@item.StockName" />    </td>
                    <td><button class="btn btn-primary" @onclick="()=> { _storlist.Remove(item); } ">X</button></td>
                </tr>

            }
        </table>
        <button class="btn btn-primary" @onclick="onSaveAll">save all</button>
        <button class="btn btn-primary" @onclick="onInsertRow" >insertrow</button>
    </form>

    @code {
        private int currentCount = 0;
        private string selectedcode = "";
        private List<Stock> _storlist = new List<Stock>();
        private void IncrementCount()
        {
            currentCount++;
            //  currentCount = _db.Stocks.Count();
        }
        private async Task  onSaveAll()
        {
            using (var db = dbf.CreateDbContext())
            {
                db.UpdateRange(_storlist);
                await db.SaveChangesAsync();
                _storlist = await db.Stocks.ToListAsync();
            }
        }

        private void onInsertRow()
        {
            Stock s = new Stock() {StockCode="zxy1",StockName="abc", Name1="" };
            _storlist.Insert(1,s);
            // StateHasChanged();

        }

        protected override void OnInitialized()
        {

            using (var db = dbf.CreateDbContext())
            {
             _storlist =  db.Stocks.ToList();

            }
            base.OnInitialized();

        }

    }
