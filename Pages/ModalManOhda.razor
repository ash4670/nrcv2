@inject DialogService ds
@inject IDbContextFactory<nrcwebContext> dbf

    <style>
    .tableFixHead thead th , thead>tr {
        position: sticky;
        top: 0;
        z-index: 2;
        overflow: auto;
    }

</style>

    <RadzenCard Style="margin: 0;padding:0 ; z-index:15000;">
        <div class="alert alert-primary col-12 h5 text-center m-0 p-0 ">
            عهدة فرد @arg_arcode  @arnamelist.Where(a => a.ArCode == arg_arcode).FirstOrDefault().ArName1   @arnamelist.Where(a => a.ArCode == arg_arcode).FirstOrDefault().Work
            <button type="button" class="btn btn-sm close" @onclick=ModalCancel>&times;</button>
        </div>
       
        @if (data == null)
        {<p><em>Loading...</em></p> }
        else
        {
            <div class="input-group m-0 p-0 ">
                <div class="input-group-text bg-transparent input-group-prepend">  <i class="oi oi-magnifying-glass"></i></div>
                <input @ref="searchinput" class="form-control" type="search" placeholder="بحث" @bind-value="_filter" @bind-value:event="oninput" @onkeyup="myfilter" />
            </div>
            <div class="tableFixHead" style=" height:250px ; overflow: auto; ">
                <table class="table  table-hover table-bordered  table-sm ">
                    <thead class="font-weight-bold">
                        <tr style="height:50%" class="bg-primary text-center text-white ">
                            <th style="  width: 5%">م</th>


                            <th @onclick="@(() =>{ data.OrderBy(d => d.ItemCode); })">كود الصنف </th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.EngName); })">وصف الصنف</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.ItemQuant); })">الكمية</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.ItemPrice); })">السعر</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.UnitName); })">الوحدة</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.TrnNo); })">رقم المستند</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.TrnDate); })">التاريخ</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.StockCode); })">المخزن</th>
                            <th @onclick="@(() =>{ data.OrderBy(d => d.StockCode); })">إختيار</th>


                           
                        </tr>
                    </thead>

                    <tbody>
                        @{int rownum = 1; }
                        @foreach (Arquant item in data)
                        {
                        <tr style="padding: 0; margin: 0; max-height: fit-content; background-color: @(item== selectedrow ? "lightblue":"lightyellow" ) " class="text-right" @onclick="()=>f_Rowclicked(item)" @ondblclick="()=>f_Rowdblclicked(item)">
                            <td style="width: 5%">@rownum</td>
                            <td>@item.ItemCode </td>
                            <td>@item.EngName </td>
                            <td>@item.ItemQuant </td>
                            <td>@item.ItemPrice </td>
                            <td>@item.UnitName </td>
                            <td>@item.TrnNo </td>
                            <td>@String.Format("{0:dd/MM/yyyy}",item.TrnDate) </td>
                            <td>@item.StockCode </td>
                            <td><input type="checkbox"  @bind-value="list_selected[rownum -1]" /> </td>

                        </tr>
                            rownum++;
                        }

                    </tbody>
                   
                </table>
            </div>
        }
        <div class="alert alert-info col-12 h5 text-center m-0 p-0 ">
            <button type="button" class="btn btn-primary btn-sm" @onclick=ModalOk>موافق</button>
            <button type="button" class="btn btn-primary btn-sm" @onclick=ModalCancel>إلغاء</button>
        </div>
    </RadzenCard>

@code {
    #region declarations

    [Parameter]    public String arg_arcode { get; set; }
    ElementReference searchinput;
    private string _filter { get; set; } = "";
    public List<Arquant> data { get; set; }
    List<bool> list_selected { get; set; } =new  List<bool>();
    public List<Arname> arnamelist { get; set; }
    public Arquant selectedrow { get; set; }
    private List<Arquant> orgdata { get; set; }
    #endregion

    private void ModalCancel() { ds.Close(new Dictionary<string, object> { { "status", false } }); }

    private void ModalOk()
    {
        if (selectedrow == null) return;
        ds.Close(new Dictionary<string, object> { { "status", true },{ "result",selectedrow  } });
    }

    //public void mysort(Func<Arquant,bool> arg)
    //{
    //    data = data.OrderBy(arg).ToList();
    //}

    public void myfilter()
    {
        if (_filter == null || _filter == string.Empty)
            data = orgdata;
        else
            data = orgdata.Where(r =>r.EngName.Contains(_filter)
            ).ToList();
    }

    protected override void OnParametersSet()
    {
        using (var db = dbf.CreateDbContext())
        {
            data = db.Arquants.Where(q=>q.ArName==arg_arcode).ToList();
            list_selected = data.Select(a => false).ToList() ;
            arnamelist = db.Arnames.ToList();
        }
        orgdata = data;
    }

    protected override void OnAfterRender(bool firstRender)    {  searchinput.FocusAsync();  }

    public  void f_Rowclicked(Arquant row)
    {
        //   await OnRowclicked.InvokeAsync(row);
        selectedrow = row;
    }

    public void f_Rowdblclicked(Arquant row)
    {
        //    await OnRowdblclicked.InvokeAsync(row);
        selectedrow = row;
        ModalOk();
    }
}
