@inject IAuthenticationService authservice
@inject NavigationManager  NavigationManager

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    protected override async Task OnInitializedAsync()
    {
        string _username;
        var currentUri = NavigationManager.Uri;
        var isLoginPage = currentUri.Contains("login", StringComparison.OrdinalIgnoreCase);

        if (!isLoginPage) // Only check authentication if not on the login page
        {
            _username = ((Entry)await authservice.GetCurrentUserAsync()).UserName;
            if (string.IsNullOrWhiteSpace(_username))
            {
                NavigationManager.NavigateTo("login");
                return; // Prevent further execution to avoid re-render issues.
            }

        }
    }
}